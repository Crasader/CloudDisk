{"version":3,"sources":["Logic/api.js","component/LoginForm.js","component/MainPanel.js","App.js","serviceWorker.js","index.js"],"names":["Api","BASE_API","login","email","password","fetch","this","method","body","JSON","stringify","headers","auth","token","getFolders","getFolder","name","addFolder","deleteFolder","uploadFile","folder","file","data","FormData","append","deleteFile","downloadFile","getFileInfo","generateShareFileDownloadUrl","url","updateFileShareType","filename","shareType","getFileInfoWithShareUrl","addr","LoginForm","props","state","error","handleSubmit","bind","e","preventDefault","then","response","ok","json","onLogin","setState","alert","className","role","type","data-dismiss","aria-label","aria-hidden","style","height","onSubmit","htmlFor","id","aria-describedby","placeholder","onChange","evt","target","value","Component","MainPanel","folders","showAddFolderDialog","addFolderError","files","showUploadFileDialog","uploadFileError","showFileShareDialog","selectedFolder","selectedFile","selectedFileId","saveFileShareType","responseJson","firstFolder","refreshFileList","folderName","newFolderName","$","val","refreshFolderList","swal","title","text","icon","buttons","cancel","visible","closeModal","confirm","dangerMode","willDelete","find","x","newUploadFile","window","open","isShared","responseData","prevProps","prevState","snapshot","folderList","map","textAlignlign","key","href","onClick","changeSelectedFolder","faFolder","tabIndex","aria-labelledby","fileList","faFile","modal","shareInfo","open_private_share","private_share_url","private_share_password","location","size","bgColor","fgColor","level","open_public_share","public_share_url","defaultChecked","publicShareValue","MainPage","Cookies","get","set","expires","SharePage","path","match","params","content","element","attributes","button","closeOnEsc","closeOnClickOutside","close","rowspan","App","exact","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39107fb0.chunk.js","sourcesContent":["const Api = {\r\n    BASE_API: 'http://localhost:5000',\r\n\r\n    login(email, password) {\r\n        return fetch(this.BASE_API + \"/login\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({email: email, password: password}),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n        });\r\n    },\r\n\r\n    // 由于跨域的问题，我们暂时不能使用 Cookie 来认证，这里改用 Header 进行认证\r\n    auth(token) {\r\n        return fetch(this.BASE_API + \"/auth\", {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': token,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n        });\r\n    },\r\n\r\n    getFolders() {\r\n        return fetch(this.BASE_API + \"/folders\", {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json'\r\n            }\r\n        });\r\n    },\r\n    getFolder(name) {\r\n        return fetch(this.BASE_API + '/folders/' + name, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json'\r\n            }\r\n        });\r\n    },\r\n    addFolder(name) {\r\n        return fetch(this.BASE_API + \"/folders\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({name: name}),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n    },\r\n    deleteFolder(name) {\r\n        return fetch(this.BASE_API + '/folders/' + name, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json'\r\n            }\r\n        });\r\n    },\r\n    uploadFile(folder, file) {\r\n        let data = new FormData();\r\n        data.append('file', file);\r\n        return fetch(this.BASE_API + '/folders/' + folder, {\r\n            method: 'POST',\r\n            body: data,\r\n            headers: {\r\n                'Accept': 'application/json'\r\n            }\r\n        });\r\n    },\r\n    deleteFile(folder, file) {\r\n        return fetch(this.BASE_API + '/folders/' + folder + '/' + file, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n            }\r\n        });\r\n    },\r\n    downloadFile(folder, file) {\r\n        return this.BASE_API + '/folders/' + folder + '/' + file;\r\n    },\r\n    getFileInfo(folder, file) {\r\n        return fetch(this.BASE_API + '/folders/' + folder + '/' + file + \"?query=info\", {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n            }\r\n        });\r\n    },\r\n    generateShareFileDownloadUrl(url) {\r\n        return this.BASE_API + \"/share/\" + url + \"?download=true\";\r\n    },\r\n\r\n    updateFileShareType(folder, filename, shareType) {\r\n        return fetch(this.BASE_API + \"/folders/\" + folder + \"/\" + filename + \"?shareType=\" + shareType, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n            },\r\n        });\r\n    },\r\n\r\n    getFileInfoWithShareUrl(url, password = null) {\r\n        let addr = this.BASE_API + \"/share/\" + url;\r\n        if (password != null)\r\n            addr += \"?password=\" + password;\r\n        return fetch(addr, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default Api;","import React, {Component} from 'react';\r\nimport Api from '../Logic/api';\r\n\r\nimport './LoginForm.css'\r\n\r\nclass LoginForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: false\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const email = this.email;\r\n        const password = this.password;\r\n        Api.login(email, password).then(response => {\r\n            if (!response.ok) {\r\n                this.setState({error: true});\r\n                return;\r\n            }\r\n            response.json().then(data => this.props.onLogin(data));\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let alert;\r\n        if (this.state.error) {\r\n            alert = (\r\n                <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                    <strong>账号密码错误！</strong> 请检查你的账号和密码是否正确。\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n            );\r\n        } else {\r\n            alert = <span></span>;\r\n        }\r\n        return (\r\n            <div className=\"row \" style={{height: \"800px\"}}>\r\n                <div className=\"align-self-center w-100 p-3\">\r\n                    <div className=\"col-4 offset-4 \">\r\n                        <div className=\"row justify-content-center p-3 mb-2 bg-primary text-white\">\r\n                            <h3>用户登录</h3>\r\n                        </div>\r\n                        <div className=\"row bg-light\">\r\n                            <form className=\"w-100 p-3\" onSubmit={this.handleSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleInputEmail1\">邮箱：</label>\r\n                                    <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\"\r\n                                           aria-describedby=\"emailHelp\"\r\n                                           placeholder=\"请输入邮箱\"\r\n                                           onChange={evt => this.email = evt.target.value}/>\r\n                                    <small id=\"emailHelp\" className=\"form-text text-muted\">我们不会向任何人展示你的邮箱地址！</small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleInputPassword1\">密码：</label>\r\n                                    <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\r\n                                           placeholder=\"请输入密码\"\r\n                                           onChange={evt => this.password = evt.target.value}/>\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">登录</button>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {alert}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            // <Col md={4} mdOffset={4}>\r\n            //     <h3>Login</h3>\r\n            //         <form id='loginForm' onSubmit={this.handleSubmit}>\r\n            //             <FormGroup>\r\n            //                 <FormControl type='text' placeholder='Email' />\r\n            //             </FormGroup>\r\n            //             <FormGroup>\r\n            //                 <FormControl type='password' placeholder='Password'/>\r\n            //             </FormGroup>\r\n            //             <FormGroup>\r\n            //                 <FormControl id='submitButton' type='submit' value='登录'/>\r\n            //             </FormGroup>\r\n            //         </form>\r\n            // </Col>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React, {Component} from 'react';\r\nimport Api from '../Logic/api'\r\nimport './MainPanel.css';\r\nimport $ from 'jquery'\r\nimport swal from 'sweetalert';\r\nimport QRCode from 'qrcode.react';\r\n\r\nimport Octicon from 'react-octicon'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faFile, faFolder, faFileDownload, faFileUpload} from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass MainPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            folders: [],\r\n            showAddFolderDialog: false,\r\n            addFolderError: false,\r\n\r\n            files: [],\r\n            showUploadFileDialog: false,\r\n            uploadFileError: false,\r\n\r\n            showFileShareDialog: false,\r\n\r\n            selectedFolder: '',\r\n            selectedFile: '',\r\n            selectedFileId: 0,\r\n\r\n        };\r\n        this.addFolder = this.addFolder.bind(this);\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.saveFileShareType = this.saveFileShareType.bind(this);\r\n    }\r\n\r\n    refreshFolderList() {\r\n        Api.getFolders().then(response => {\r\n            if (response.ok) {\r\n                response.json().then(responseJson => {\r\n                    const firstFolder = responseJson.data[0];\r\n                    this.setState({\r\n                        folders: responseJson.data,\r\n                        selectedFolder: firstFolder,\r\n                    }, () => {\r\n                        this.refreshFileList();\r\n                    })\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    refreshFileList() {\r\n        if (!this.state.selectedFolder) {\r\n            return;\r\n        }\r\n        Api.getFolder(this.state.selectedFolder.name).then(response => {\r\n            if (response.ok) {\r\n                response.json().then(responseJson => {\r\n                    this.setState({\r\n                        files: responseJson.data.files,\r\n                    });\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    addFolder(folderName = null) {\r\n        if (folderName == null) folderName = this.newFolderName;\r\n        Api.addFolder(folderName).then(response => {\r\n            this.setState({\r\n                addFolderError: !response.ok,\r\n            });\r\n            if (response.ok) {\r\n                this.setState({\r\n                    showAddFolderDialog: false\r\n                });\r\n                $('#inputFolderName').val('');\r\n                this.refreshFolderList();\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteFolder(folderName) {\r\n        swal({\r\n            title: \"确定删除文件夹 \" + folderName + \" 吗？\",\r\n            text: \"删除后文件夹内容不可恢复！\",\r\n            icon: \"warning\",\r\n            buttons: {\r\n                cancel: {\r\n                    text: \"取消\",\r\n                    value: false,\r\n                    visible: true,\r\n                    className: \"\",\r\n                    closeModal: true,\r\n                },\r\n                confirm: {\r\n                    text: \"确定\",\r\n                    value: true,\r\n                    visible: true,\r\n                    className: \"\",\r\n                    closeModal: true\r\n                }\r\n            },\r\n            dangerMode: true,\r\n        }).then((willDelete) => {\r\n            if (willDelete) {\r\n                Api.deleteFolder(folderName).then(response => {\r\n                    if (response.ok) {\r\n                        swal(\"文件夹删除成功.\", {\r\n                            icon: \"success\",\r\n                        });\r\n                        this.refreshFolderList();\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    changeSelectedFolder(id) {\r\n        if (this.state.selectedFolder.id === id) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            selectedFolder: this.state.folders.find(x => x.id == id)\r\n        }, () => {\r\n            this.refreshFileList();\r\n        });\r\n    }\r\n\r\n    uploadFile() {\r\n\r\n        Api.uploadFile(this.state.selectedFolder.name, this.newUploadFile).then(response => {\r\n            this.setState({\r\n                uploadFileError: !response.ok\r\n            });\r\n            if (response.ok) {\r\n                this.setState({\r\n                    showUploadFileDialog: false\r\n                });\r\n                $('#inputFile').val('');\r\n                this.refreshFileList();\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteFile(filename) {\r\n        swal({\r\n            title: \"确定删除文件 \" + filename + \" 吗？\",\r\n            text: \"删除后文件不可恢复！\",\r\n            icon: \"warning\",\r\n            buttons: {\r\n                cancel: {\r\n                    text: \"取消\",\r\n                    value: false,\r\n                    visible: true,\r\n                    className: \"\",\r\n                    closeModal: true,\r\n                },\r\n                confirm: {\r\n                    text: \"确定\",\r\n                    value: true,\r\n                    visible: true,\r\n                    className: \"\",\r\n                    closeModal: true\r\n                }\r\n            },\r\n            dangerMode: true,\r\n        }).then(willDelete => {\r\n            if (willDelete) {\r\n                Api.deleteFile(this.state.selectedFolder.name, filename).then(response => {\r\n                    if (response.ok) {\r\n                        swal(\"文件删除成功.\", {\r\n                            icon: \"success\",\r\n                        });\r\n                        this.refreshFileList();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    downloadFile(filename) {\r\n        window.open(Api.downloadFile(this.state.selectedFolder.name, filename), \"_blank\");\r\n    }\r\n\r\n    saveFileShareType(isShared) {\r\n        let shareType = \"none\";\r\n        if (isShared == 1)\r\n            shareType = \"private\";\r\n        else if (isShared == 2)\r\n            shareType = \"public\";\r\n        Api.updateFileShareType(this.state.selectedFolder.name, this.state.selectedFile.filename, shareType).then(response => {\r\n            if (response.ok) {\r\n                Api.getFileInfo(this.state.selectedFolder.name, this.state.selectedFile.filename).then(responseData => {\r\n                    if (responseData.ok) {\r\n                        responseData.json().then(responseJson => {\r\n                            this.refreshFileList();\r\n                            this.setState({\r\n                                selectedFile: responseJson.data\r\n                            })\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshFolderList();\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // if (this.state.showAddFolderDialog) {\r\n        //     $('#addFolderModal').modal('show');\r\n        // } else {\r\n        //     $('#addFolderModal').modal('hide');\r\n        // }\r\n    }\r\n\r\n    render() {\r\n\r\n        let folderList = this.state.folders.map(folder => {\r\n            return (\r\n                <li className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n                    style={{textAlignlign: 'center'}}\r\n                    key={folder.id}>\r\n                    <a href=\"#\" className=\"d-flex align-items-center folderItem float-left\" onClick={() => {\r\n                        this.changeSelectedFolder(folder.id)\r\n                    }}>\r\n                        <FontAwesomeIcon className=\"float-left ml-1 mr-1\" icon={faFolder}/>\r\n                        <span>{folder.name}</span>\r\n                    </a>\r\n                    <button type=\"button\" className=\"float-right btn btn-danger\" aria-label=\"Close\"\r\n                            onClick={() => this.deleteFolder(folder.name)}>\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let addFolderError;\r\n        if (this.state.addFolderError) {\r\n            addFolderError = (\r\n                <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                    <strong>添加文件夹失败！</strong>请确认名称是否无重复。\r\n                </div>\r\n            );\r\n        } else {\r\n            addFolderError = <span></span>;\r\n        }\r\n\r\n        let addFolderModal;\r\n        if (this.state.showAddFolderDialog) {\r\n            addFolderModal = (\r\n                <div className=\"modal fade\" id=\"addFolderModal\" tabIndex=\"-1\" role=\"dialog\"\r\n                     aria-labelledby=\"addFolderErrorModelLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"addFolderErrorModelLabel\">添加文件夹</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n                                        onClick={() => {\r\n                                            this.setState({showAddFolderDialog: false})\r\n                                        }}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                {addFolderError}\r\n                                <div className=\"row w-100 p-3  align-items-center\">\r\n                                    <div className=\"col-4 h-100 align-self-center\">\r\n                                        文件夹名称：\r\n                                    </div>\r\n                                    <div className=\"col-8\">\r\n                                        <input type=\"text\" className=\"form-control\" id=\"inputFolderName\"\r\n                                               placeholder=\"请输入文件夹名称\"\r\n                                               onChange={evt => this.newFolderName = evt.target.value}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => this.addFolder()}>创\r\n                                    建\r\n                                </button>\r\n                                <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\"\r\n                                        aria-label=\"Close\"\r\n                                        onClick={() => {\r\n                                            this.setState({showAddFolderDialog: false})\r\n                                        }}>关 闭\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            addFolderModal = <span></span>;\r\n        }\r\n\r\n        let fileList = this.state.files.map(file => {\r\n            return (\r\n                <li className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n                    key={file.id}>\r\n                    <a href=\"#\" className=\"d-flex align-items-center fileItem float-left\">\r\n                        <FontAwesomeIcon className=\"float-left ml-1 mr-1\" icon={faFile}/>\r\n                        <span>{file.filename}</span>\r\n                    </a>\r\n                    <div className=\"float-right\">\r\n\r\n                        <button type=\"button\" className=\"btn btn-danger mr-1 ml-1\"\r\n                                onClick={() => this.deleteFile(file.filename)}>\r\n                            <span aria-hidden=\"true\">删 除</span>\r\n                        </button>\r\n                        <button type=\"button\" className=\"btn btn-primary mr-1 ml-1\"\r\n                                onClick={() => this.downloadFile(file.filename)}>\r\n                            <span aria-hidden=\"true\">下 载</span>\r\n                        </button>\r\n                        <button type=\"button\" className=\"btn btn-primary mr-1 ml-1\"\r\n                                onClick={() => {\r\n                                    this.setState({\r\n                                        selectedFileId: file.id,\r\n                                        selectedFile: file,\r\n                                        showFileShareDialog: true\r\n                                    });\r\n                                }}>\r\n                            <span aria-hidden=\"true\">分 享</span>\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let uploadFileError;\r\n        if (this.state.uploadFileError) {\r\n            uploadFileError = (\r\n                <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                    <strong>上传文件失败！</strong>请确认文件是否重复，或者服务器运行和网络连接是否正常。\r\n                </div>\r\n            );\r\n        } else {\r\n            uploadFileError = <span></span>;\r\n        }\r\n        if (this.state.showFileShareDialog === true)\r\n            $('#shareFileModal').modal('show');\r\n        else\r\n            $('#shareFileModal').modal('hide');\r\n\r\n\r\n        if (this.state.showUploadFileDialog === true)\r\n            $('#addFileModal').modal('show');\r\n        else\r\n            $('#addFileModal').modal('hide');\r\n\r\n        if (this.state.showAddFolderDialog === true)\r\n            $('#addFolderModal').modal('show');\r\n        else\r\n            $('#addFolderModal').modal('hide');\r\n\r\n        let shareInfo = <span></span>;\r\n        if (this.state.selectedFile.open_private_share === true) {\r\n            shareInfo = (\r\n                <div className=\"row w-100 pl-4 pr-4 d-flex justify-content-between align-items-center\">\r\n                    <div className=\"float-left\">\r\n                        {\"私密分享地址：\" + this.state.selectedFile.private_share_url +\r\n                        \"   密码：\" + this.state.selectedFile.private_share_password}\r\n                    </div>\r\n                    <div className=\"float-right\">\r\n                        <QRCode\r\n                            value={window.location + \"s/\" + this.state.selectedFile.private_share_url}\r\n                            size={64} bgColor={'#ffffff'}\r\n                            fgColor={'#000000'}\r\n                            level={'L'}/>\r\n                    </div>\r\n                </div>);\r\n        } else if (this.state.selectedFile.open_public_share === true) {\r\n            shareInfo = (\r\n                <div className=\"row w-100 pl-4 pr-4 d-flex justify-content-between align-items-center\">\r\n                    <div className=\"float-left\">\r\n                        {\"公开分享地址：\" + this.state.selectedFile.public_share_url}\r\n                    </div>\r\n                    <div className=\"float-right\">\r\n                        <QRCode\r\n                            value={window.location + \"s/\" + this.state.selectedFile.public_share_url}\r\n                            size={64} bgColor={'#ffffff'}\r\n                            fgColor={'#000000'}\r\n                            level={'L'}/>\r\n                    </div>\r\n                </div>);\r\n        }\r\n        return (\r\n            <div className=\"w-100 p-3\">\r\n                <div className='row'>\r\n                    {/*<div className=\"align-self-center w-100 p-3\">*/}\r\n                    <div className=\"col-2 \">\r\n                        <button type=\"button\" className=\"btn btn-primary w-100 p-2\"\r\n                                onClick={() => this.setState({showAddFolderDialog: true})}>\r\n                            添加文件夹\r\n                        </button>\r\n                    </div>\r\n                    {/*</div>*/}\r\n                    <div className=\"col-2\">\r\n                        <button type=\"button\" className=\"btn btn-primary w-100 p-2\"\r\n                                onClick={() => this.setState({showUploadFileDialog: true})}>\r\n                            上传文件\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {/*<div className=\"align-self-center w-100 p-3\">*/}\r\n                    <div className=\"col-4  w-100 p-3\">\r\n                        <ul className=\"list-group\">\r\n                            {folderList}\r\n                        </ul>\r\n                        {/*</div>*/}\r\n                    </div>\r\n                    {/*<div className=\"align-self-center w-100 p-3\">*/}\r\n                    <div className=\"col-7 offset-1 w-100 p-3\">\r\n                        <ul className=\"list-group\">\r\n                            {fileList}\r\n                        </ul>\r\n                    </div>\r\n                    {/*</div>*/}\r\n                </div>\r\n                <div>\r\n                    <div className=\"modal fade\" id=\"addFolderModal\" tabIndex=\"-1\" role=\"dialog\"\r\n                         aria-labelledby=\"addFolderErrorModelLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"addFolderErrorModelLabel\">添加文件夹</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n                                            onClick={() => {\r\n                                                this.setState({showAddFolderDialog: false})\r\n                                            }}>\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    {addFolderError}\r\n                                    <div className=\"row w-100 p-3  align-items-center\">\r\n                                        <div className=\"col-4 h-100 align-self-center\">\r\n                                            文件夹名称：\r\n                                        </div>\r\n                                        <div className=\"col-8\">\r\n                                            <input type=\"text\" className=\"form-control\" id=\"inputFolderName\"\r\n                                                   placeholder=\"请输入文件夹名称\"\r\n                                                   onChange={evt => this.newFolderName = evt.target.value}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" onClick={() => {\r\n                                        this.addFolder();\r\n                                    }}>创 建\r\n                                    </button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\"\r\n                                            aria-label=\"Close\"\r\n                                            onClick={() => {\r\n                                                this.setState({showAddFolderDialog: false})\r\n                                            }}>返 回\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"modal fade\" id=\"addFileModal\" tabIndex=\"-1\" role=\"dialog\"\r\n                         aria-labelledby=\"addFilerErrorModelLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"addFileErrorModelLabel\">上传文件</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n                                            onClick={() => {\r\n                                                this.setState({showUploadFileDialog: false})\r\n                                            }}>\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    {uploadFileError}\r\n                                    <div className=\"row w-100 p-3  align-items-center\">\r\n                                        <div className=\"col-4 h-100 align-self-center\">\r\n                                            文件夹名称：\r\n                                        </div>\r\n                                        <div className=\"col-8\">\r\n                                            <input type=\"file\" className=\"form-control\" id=\"inputFile\"\r\n                                                   placeholder=\"上传文件\"\r\n                                                   onChange={evt => this.newUploadFile = evt.target.files[0]}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" onClick={() => this.uploadFile()}>\r\n                                        上 传\r\n                                    </button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\"\r\n                                            aria-label=\"Close\"\r\n                                            onClick={() => {\r\n                                                this.setState({showUploadFileDialog: false})\r\n                                            }}>返 回\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"modal fade\" id=\"shareFileModal\" tabIndex=\"-1\" role=\"dialog\"\r\n                         aria-labelledby=\"addFilerErrorModelLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"addFileErrorModelLabel\">文件分享</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n                                            onClick={() => {\r\n                                                this.setState({showUploadFileDialog: false})\r\n                                            }}>\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    {shareInfo}\r\n                                    <div className=\"row w-100  pl-4 pr-4\">\r\n                                        <form>\r\n                                            <div className=\"form-check  form-check-inline\">\r\n                                                <input className=\"form-check-input\" type=\"radio\" name=\"fileShareRadio\"\r\n                                                       id=\"exampleRadios1\" value=\"option1\"\r\n                                                       defaultChecked={this.state.selectedFile.open_public_share}\r\n                                                       onClick={() => this.publicShareValue = 2}/>\r\n                                                <label className=\"form-check-label\">\r\n                                                    公开分享\r\n                                                </label>\r\n                                            </div>\r\n                                            <div className=\"form-check  form-check-inline\">\r\n                                                <input className=\"form-check-input\" type=\"radio\" name=\"fileShareRadio\"\r\n                                                       id=\"exampleRadios2\" value=\"option2\"\r\n                                                       defaultChecked={this.state.selectedFile.open_private_share}\r\n                                                       onClick={() => this.publicShareValue = 1}/>\r\n                                                <label className=\"form-check-label\">\r\n                                                    私密分享\r\n                                                </label>\r\n                                            </div>\r\n                                            <div className=\"form-check  form-check-inline\">\r\n                                                <input className=\"form-check-input\" type=\"radio\" name=\"fileShareRadio\"\r\n                                                       id=\"exampleRadios3\" value=\"option3\"\r\n                                                       defaultChecked={!this.state.selectedFile.open_public_share && !this.state.selectedFile.open_private_share}\r\n                                                       onClick={() => this.publicShareValue = 0}/>\r\n                                                <label className=\"form-check-label\">\r\n                                                    关闭分享\r\n                                                </label>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"submit\" className=\"btn btn-primary\"\r\n                                            onClick={() => this.saveFileShareType(this.publicShareValue)}>\r\n                                        保 存\r\n                                    </button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\"\r\n                                            aria-label=\"Close\"\r\n                                            onClick={() => {\r\n                                                this.setState({showFileShareDialog: false})\r\n                                            }}>返 回\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPanel;\r\n","import React, {Component} from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport Api from './Logic/api';\r\n\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.min';\r\nimport 'jquery';\r\nimport 'react-popper';\r\nimport swal from 'sweetalert';\r\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faFile} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport LoginForm from './component/LoginForm';\r\nimport MainPanel from './component/MainPanel';\r\n\r\n\r\nclass MainPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: false\r\n        };\r\n        this.onLogin = this.onLogin.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let token = Cookies.get('token');\r\n        if (token) {\r\n            Api.auth(token).then(response => {\r\n                if (response.ok) {\r\n                    this.setState({\r\n                        login: true\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onLogin(data) {\r\n        Cookies.set('token', data.token, {expires: 7});\r\n        this.setState({\r\n            login: true\r\n        })\r\n    }\r\n\r\n    clearCookie() {\r\n        let token = Cookies.get('token');\r\n        if (token) {\r\n            Cookies.set('token', null);\r\n            window.location.href = \"/\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.login) {\r\n            return <MainPanel title=\"主页面\"/>;\r\n        } else {\r\n            return <LoginForm onLogin={this.onLogin}/>\r\n        }\r\n    }\r\n}\r\n\r\nclass SharePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const path = this.props.match.params.path;\r\n        Api.getFileInfoWithShareUrl(path).then(response => {\r\n            if (response.ok) {\r\n                response.json().then(responseJson => {\r\n                    this.setState({\r\n                        file: responseJson.data\r\n                    });\r\n                    if (responseJson.data.open_private_share) {\r\n                        swal({\r\n                            text: \"请输入密码\",\r\n                            content: {\r\n                                element: \"input\",\r\n                                attributes: {\r\n                                    placeholder: \"输入密码\",\r\n                                    type: \"password\",\r\n                                },\r\n                            },\r\n                            button: {\r\n                                text: \"确认\",\r\n                                closeModal: false,\r\n                                closeOnEsc: false,\r\n                            },\r\n                            closeOnClickOutside: false,\r\n                        }).then(password => {\r\n                            Api.getFileInfoWithShareUrl(path, password).then(response => {\r\n                                response.json().then(responseJson => {\r\n                                    if (responseJson.data.token) {\r\n                                        Cookies.set('token', responseJson.data.token, {expires: 1});\r\n                                        swal.close();\r\n                                    } else {\r\n                                        swal(\"密码错误！\");\r\n                                    }\r\n                                });\r\n                            });\r\n                        })\r\n                    }\r\n                    Cookies.set('token', responseJson.data.token, {expires: 1});\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.file) {\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"col-4 offset-4\">\r\n                        <span>文件不存在！</span>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-content-center\">\r\n                <tbody>\r\n                <tr>\r\n                    <td rowspan=\"2\"><FontAwesomeIcon icon={faFile} size={\"4x\"}/></td>\r\n                    <td>{this.state.file.filename}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"d-flex justify-content-center align-content-center\">\r\n                        <button className=\"btn btn-primary w-75\" onClick={() => {\r\n                            // window.open(Api.generateShareFileDownloadUrl(this.props.match.params.path), \"_blank\");\r\n                            window.open(Api.generateShareFileDownloadUrl(this.props.match.params.path), '_blank');\r\n                        }}>\r\n                            下 载\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst App = () => (\r\n    <div className=\"container\">\r\n        <nav className=\"nav p-3 mb-2 bg-light text-dark\">\r\n            <a className=\"nav-link active\" href=\"/\">CloudDisk - 私有云硬盘</a>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n                let token = Cookies.get('token');\r\n                if (token) {\r\n                    Cookies.set('token', null);\r\n                    window.location.href = \"/\";\r\n                }\r\n            }}>手动清除Cookie\r\n                {/*（分享和登录的cookie）*/}\r\n            </button>\r\n        </nav>\r\n        <Router>\r\n            <Route path=\"/\" exact component={MainPage}/>\r\n            <Route path=\"/s/:path\" component={SharePage}/>\r\n        </Router>\r\n    </div>\r\n);\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}